#!/bin/bash

name="$1"
host="$2"
port="$3"
form="$4"

if [ "$form" = "" ]; then
    echo "Usage: $0 <NAME> <HOST> <PORT> <FORM>"
    echo "Example: $0 lights stories 8409 \"(+ 3 4)\""
    exit
fi

# Create a random IV that's 16 bytes long.
iv=$(dd if=/dev/urandom bs=16 count=1 2>/dev/null | md5sum | cut -c1-32)
nonce=$(dd if=/dev/urandom bs=16 count=1 2>/dev/null | md5sum | cut -c1-32)

# Get the secret from the ~/.authinfo file for this service and
# front-pad it.  If name is an empty string, obfuscate with the string
# "nil" instead.
if [ "$name" != "" ]; then
    secret=$(grep "machine $name " ~/.authinfo | sed 's/^.*password //')
else
    secret="nil"
fi

psecret=$(printf %32s "$secret")
stamp=$(date "+%Y-%m-%dT%H:%M:%S%z")

# Encrypt the form we're sending over.
message=$(echo "(:stamp \"$stamp\" :nonce \"$nonce\" :data $form)" |\
	      openssl enc -aes-256-cbc -nosalt\
		      -K $(echo -n "$psecret" | xxd -c 256 -pu)\
		      -iv $iv |\
	      base64 | sed ':a;N;$!ba;s/\n//g')

ivbase=$(echo -n $iv | xxd -r -pu | base64)

hmacbase=$((echo $message | base64 -d; echo -n $iv | xxd -r -pu) | openssl dgst -binary -sha256 -hmac "$secret" | base64)

# Send the message to the eval server.
response=$(echo "(:cipher AES-256-CBC :mac HMAC-SHA256 :hmac \"$hmacbase\" :iv \"$ivbase\" :message \"$message\")" | nc "$host" "$port")

if [ "$response" = "" ]; then
    echo "Got an empty reponse back from $host:$port"
    exit
fi

# Parse the plist we got back.
declare -A pvalue

parse_plist() {
    declare -a pl=$1
    pvalue=()
    local i=0
    while [[ i -lt ${#pl[@]} ]]
    do
        pvalue[${pl[ i ]}]=${pl[ i+1 ]}
        i=$(( i + 2 ))
    done
}

parse_plist "$response"

riv=${pvalue[:iv]}
rmessage=${pvalue[:message]}
rcipher=${pvalue[:cipher]}
rerror=${pvalue[:error]}

if [ "$rcipher" != "AES-256-CBC" ]; then
    echo "Error: Got wrong cipher in response from server: '$rcipher'"
    exit
fi

if [ "$rerror" != "" ]; then
    echo "Error: Got error message from server:"
    echo -n "$rerror" | base64 -d |\
	openssl enc -d -aes-256-cbc -nosalt\
		-K $(echo -n "$psecret" | xxd -c 256 -pu)\
		-iv $(echo -n "$riv" | base64 -d | xxd -c 256 -pu)
    exit
fi

# Decrypt the message we got back.
data=$(echo -n "$rmessage" | base64 -d |\
	   openssl enc -d -aes-256-cbc -nosalt\
		   -K $(echo -n "$psecret" | xxd -c 256 -pu)\
		   -iv $(echo -n "$riv" | base64 -d | xxd -c 256 -pu))

parse_plist "$data"
rnonce=${pvalue[:nonce]}

if [ "$nonce" != "$rnonce" ]; then
    echo "Got wrong nonce back from server: $rnonce" >&2
    exit
fi

echo ${pvalue[:data]}
