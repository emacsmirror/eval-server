#!/bin/bash

name="$1"
host="$2"
port="$3"
form="$4"

if [ "$form" = "" ]; then
    echo "Usage: $0 <NAME> <HOST> <PORT> <FORM>"
    echo "Example: $0 lights stories 8409 \"(+ 3 4)\""
    exit
fi

# Create a random IV that's 16 bytes long.
iv=$(printf %16.16s $(echo $RANDOM | md5sum | cut -d' ' -f1))

# Get the secret from the ~/.authinfo file for this service and
# front-pad it.
secret=$(printf %32s $(grep "machine $name " ~/.authinfo | sed 's/^.*password //'))

# Encrypt the form we're sending over.
message=$(echo "$form" |\
	      openssl enc -aes-256-cbc -nosalt\
		      -K $(echo -n "$secret" | xxd -c 256 -pu)\
		      -iv $(echo -n "$iv" | xxd -c 256 -pu) | base64)

ivbase=$(echo -n $iv | base64)

# Send the message to the eval server.
response=$(echo "(:cipher AES-256-CBC :iv \"$ivbase\" :message \"$message\")" | nc "$host" "$port")

# Parse the plist we got back.
declare -A pvalue

parse_plist() {
    declare -a pl=$1
    pvalue=()
    local i=0
    while [[ i -lt ${#pl[@]} ]]
    do
        pvalue[${pl[ i ]}]=${pl[ i+1 ]}
        i=$(( i + 2 ))
    done
}

parse_plist "$response"

riv=${pvalue[:iv]}
rmessage=${pvalue[:message]}

# Decrypt the message we got back.
echo -n "$rmessage" | base64 -d |\
    openssl enc -d -aes-256-cbc -nosalt\
	    -K $(echo -n "$secret" | xxd -c 256 -pu)\
	    -iv $(echo -n "$riv" | base64 -d | xxd -c 256 -pu)
